Data: Directed graph G = (V, E), a traversal order of the vertices in V , a priority on edges
Result: A feasible clustering C of G

top ← CompTopLevels(G)
for u ∈ V do
    markup[u] ← false
    markdown[u] ← false
    leader[u] ← u
for u ∈ V following the traversal order in input do
    if markup[u] and markdown[u] then continue
    for v ∈ Neigh[u] following given priority on edges do
        if (|top[u] − top[v]| > 1) then continue
        if v ∈ Succ[u] then
            if markup[v] then continue
            if DetectCycle(u, v, G, leader) then continue
            leader[u] ← leader[v]
            markup[u] ← markdown[v] ← true
        if v ∈ Pred[u] then
            if markdown[v] then continue
            if DetectCycle(u, v, G, leader) then continue
            leader[u] ← leader[v]
            markdown[u] ← markup[v] ← true
return leader